{"ast":null,"code":"var _jsxFileName = \"/home/tanvir/Lab/office-workspace/Redux-Assignments/class-note-3/src/components/Footer.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterStatusChange } from \"../redux/filters/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusList = [\"All\", \"Complete\", \"Incomplete\"];\n\nconst colorList = function () {\n  let filterColorList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const list = [{\n    colorName: \"green\",\n    className: `h-3 w-3 border-2 border-green-500 md:hover:bg-green-500 rounded-full cursor-pointer ${filterColorList.includes('green') && \"bg-green-500\"}`\n  }, {\n    colorName: \"red\",\n    className: `h-3 w-3 border-2 border-red-500 md:hover:bg-red-500 rounded-full cursor-pointer ${filterColorList.includes('red') && \"bg-red-500\"}`\n  }, {\n    colorName: \"yellow\",\n    className: `h-3 w-3 border-2 border-yellow-500 md:hover:bg-yellow-500 rounded-full cursor-pointer ${filterColorList.includes('yellow') && \"bg-yellow-500\"}`\n  }];\n  return list;\n};\n\nexport default function Footer() {\n  _s();\n\n  var _todos$filter;\n\n  const todos = useSelector(state => state.todos);\n  const todosRemaining = (todos === null || todos === void 0 ? void 0 : (_todos$filter = todos.filter(todo => !todo.completed)) === null || _todos$filter === void 0 ? void 0 : _todos$filter.length) || 0;\n  const filters = useSelector(state => state.filters);\n  const {\n    status,\n    color\n  } = filters;\n  const dispatch = useDispatch();\n\n  const handleStatusChange = status => {\n    dispatch(filterStatusChange(status));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 flex justify-between text-xs text-gray-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [todosRemaining, \" tasks left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex space-x-1 items-center text-xs\",\n      children: [statusList.map((statusItem, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleStatusChange(statusItem),\n          className: `cursor-pointer ${filters.status === statusItem && \"font-bold\"}`,\n          children: statusItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), index < statusList.length - 1 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 59\n        }, this)]\n      }, statusItem + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), colorList(color).map((colorItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${colorItem.className}`\n      }, colorItem.colorName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Footer, \"VHFjIF8rlb8mM7al1xvMvD1TK7Y=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/home/tanvir/Lab/office-workspace/Redux-Assignments/class-note-3/src/components/Footer.js"],"names":["Fragment","useSelector","useDispatch","filterStatusChange","statusList","colorList","filterColorList","list","colorName","className","includes","Footer","todos","state","todosRemaining","filter","todo","completed","length","filters","status","color","dispatch","handleStatusChange","map","statusItem","index","colorItem"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterStatusChange } from \"../redux/filters/actions\";\n\nconst statusList = [\"All\", \"Complete\", \"Incomplete\"];\nconst colorList = (filterColorList = []) => {\n  const list = [\n    {\n      colorName: \"green\",\n      className: `h-3 w-3 border-2 border-green-500 md:hover:bg-green-500 rounded-full cursor-pointer ${\n        filterColorList.includes('green') && \"bg-green-500\"\n      }`,\n    },\n    {\n      colorName: \"red\",\n      className: `h-3 w-3 border-2 border-red-500 md:hover:bg-red-500 rounded-full cursor-pointer ${\n        filterColorList.includes('red') && \"bg-red-500\"\n      }`,\n    },\n    {\n      colorName: \"yellow\",\n      className: `h-3 w-3 border-2 border-yellow-500 md:hover:bg-yellow-500 rounded-full cursor-pointer ${\n        filterColorList.includes('yellow') && \"bg-yellow-500\"\n      }`,\n    },\n  ];\n\n  return list;\n};\n\nexport default function Footer() {\n  const todos = useSelector((state) => state.todos);\n  const todosRemaining = todos?.filter((todo) => !todo.completed)?.length || 0;\n\n  const filters = useSelector((state) => state.filters);\n  const { status, color } = filters;\n\n  const dispatch = useDispatch();\n\n  const handleStatusChange = (status) => {\n    dispatch(filterStatusChange(status));\n  };\n\n  return (\n    <div className=\"mt-4 flex justify-between text-xs text-gray-500\">\n      <p>{todosRemaining} tasks left</p>\n      <ul className=\"flex space-x-1 items-center text-xs\">\n        {statusList.map((statusItem, index) => (\n          <Fragment key={statusItem + index}>\n            <li\n              onClick={() => handleStatusChange(statusItem)}\n              className={`cursor-pointer ${\n                filters.status === statusItem && \"font-bold\"\n              }`}\n            >\n              {statusItem}\n            </li>\n            {index < statusList.length - 1 ? <li>|</li> : <li></li>}\n          </Fragment>\n        ))}\n\n        <li></li>\n        {colorList(color).map((colorItem, index) => (\n          <li key={colorItem.colorName} className={`${colorItem.className}`}></li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}