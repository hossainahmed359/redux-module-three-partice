{"ast":null,"code":"import { ADD_TODO, COLOR_SELECT_TODO, COMPLETE_ALL_TODO, CLEAR_COMPLETED_TODO, DELETE_TODO, TOGGLE_TODO } from \"./actionTypes\";\nimport { initialState } from \"./initialState\";\n\nfunction createTodoId() {\n  let todos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n}\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, {\n        id: createTodoId(state),\n        text: action.payload.text\n      }];\n\n    case COLOR_SELECT_TODO:\n      const {\n        todoId,\n        color\n      } = action.payload;\n      return state.map(todo => {\n        if (todo.id !== todoId) return todo;\n        return { ...todo,\n          color\n        };\n      });\n\n    case COMPLETE_ALL_TODO:\n      return state.map(todo => {\n        return { ...todo,\n          completed: true\n        };\n      });\n\n    case CLEAR_COMPLETED_TODO:\n      return state.filter(todo => !todo.completed);\n\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload.todoId);\n\n    case TOGGLE_TODO:\n      return state.map(todo => {\n        if (todo.id !== action.payload.todoId) return todo;\n        return { ...todo,\n          completed: !todo.completed\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/tanvir/Lab/office-workspace/Redux-Assignments/class-note-3/src/redux/todos/reducer.js"],"names":["ADD_TODO","COLOR_SELECT_TODO","COMPLETE_ALL_TODO","CLEAR_COMPLETED_TODO","DELETE_TODO","TOGGLE_TODO","initialState","createTodoId","todos","maxId","reduce","todo","Math","max","id","reducer","state","action","type","text","payload","todoId","color","map","completed","filter"],"mappings":"AAAA,SACEA,QADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,WALF,EAMEC,WANF,QAOO,eAPP;AAQA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,SAASC,YAAT,GAAkC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAChC,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACD,KAAD,EAAQE,IAAR,KAAiBC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACG,EAAd,EAAkBL,KAAlB,CAA9B,EAAwD,CAAC,CAAzD,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACD;;AAED,MAAMM,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKlB,QAAL;AACE,aAAO,CACL,GAAGgB,KADE,EAEL;AACEF,QAAAA,EAAE,EAAEP,YAAY,CAACS,KAAD,CADlB;AAEEG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD;AAFvB,OAFK,CAAP;;AAQF,SAAKlB,iBAAL;AACE,YAAM;AAAEoB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoBL,MAAM,CAACG,OAAjC;AACA,aAAOJ,KAAK,CAACO,GAAN,CAAWZ,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACG,EAAL,KAAYO,MAAhB,EAAwB,OAAOV,IAAP;AACxB,eAAO,EACL,GAAGA,IADE;AAELW,UAAAA;AAFK,SAAP;AAID,OANM,CAAP;;AAQF,SAAKpB,iBAAL;AACE,aAAOc,KAAK,CAACO,GAAN,CAAWZ,IAAD,IAAU;AACzB,eAAO,EACL,GAAGA,IADE;AAELa,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID,OALM,CAAP;;AAOF,SAAKrB,oBAAL;AACE,aAAOa,KAAK,CAACS,MAAN,CAAcd,IAAD,IAAU,CAACA,IAAI,CAACa,SAA7B,CAAP;;AAEF,SAAKpB,WAAL;AACE,aAAOY,KAAK,CAACS,MAAN,CAAcd,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYG,MAAM,CAACG,OAAP,CAAeC,MAAlD,CAAP;;AAEF,SAAKhB,WAAL;AACE,aAAOW,KAAK,CAACO,GAAN,CAAWZ,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACG,EAAL,KAAYG,MAAM,CAACG,OAAP,CAAeC,MAA/B,EAAuC,OAAOV,IAAP;AACvC,eAAO,EACL,GAAGA,IADE;AAELa,UAAAA,SAAS,EAAE,CAACb,IAAI,CAACa;AAFZ,SAAP;AAID,OANM,CAAP;;AAQF;AACE,aAAOR,KAAP;AA7CJ;AA+CD,CAhDD;;AAkDA,eAAeD,OAAf","sourcesContent":["import {\n  ADD_TODO,\n  COLOR_SELECT_TODO,\n  COMPLETE_ALL_TODO,\n  CLEAR_COMPLETED_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n} from \"./actionTypes\";\nimport { initialState } from \"./initialState\";\n\nfunction createTodoId(todos = []) {\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: createTodoId(state),\n          text: action.payload.text,\n        },\n      ];\n\n    case COLOR_SELECT_TODO:\n      const { todoId, color } = action.payload;\n      return state.map((todo) => {\n        if (todo.id !== todoId) return todo;\n        return {\n          ...todo,\n          color,\n        };\n      });\n\n    case COMPLETE_ALL_TODO:\n      return state.map((todo) => {\n        return {\n          ...todo,\n          completed: true,\n        };\n      });\n\n    case CLEAR_COMPLETED_TODO:\n      return state.filter((todo) => !todo.completed);\n\n    case DELETE_TODO:\n      return state.filter((todo) => todo.id !== action.payload.todoId);\n\n    case TOGGLE_TODO:\n      return state.map((todo) => {\n        if (todo.id !== action.payload.todoId) return todo;\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      });\n      \n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}