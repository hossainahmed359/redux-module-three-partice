{"ast":null,"code":"import { FILTER_STATUS_CHANGE, FILTER_COLOR_CHANGE } from \"./actionTypes\";\nimport { initialState } from \"./initialState\";\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_STATUS_CHANGE:\n      return { ...state,\n        status: action.payload.status\n      };\n\n    case FILTER_COLOR_CHANGE:\n      const {\n        color,\n        changeType\n      } = action.payload;\n\n      switch (changeType) {\n        case \"added\":\n          return { ...state,\n            colors: [...state.colors, color]\n          };\n\n        case \"removed\":\n          return { ...state,\n            colors: state.colors.filter(existingColor => existingColor !== color)\n          };\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/tanvir/Lab/office-workspace/Redux-Assignments/class-note-3/src/redux/filters/reducer.js"],"names":["FILTER_STATUS_CHANGE","FILTER_COLOR_CHANGE","initialState","reducer","state","action","type","status","payload","color","changeType","colors","filter","existingColor"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,mBAA/B,QAA0D,eAA1D;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,OAAO,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,MAAM,EAAEF,MAAM,CAACG,OAAP,CAAeD;AAFlB,OAAP;;AAKF,SAAKN,mBAAL;AACE,YAAM;AAAEQ,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAwBL,MAAM,CAACG,OAArC;;AAEA,cAAQE,UAAR;AACE,aAAK,OAAL;AACE,iBAAO,EACL,GAAGN,KADE;AAELO,YAAAA,MAAM,EAAE,CAAC,GAAGP,KAAK,CAACO,MAAV,EAAkBF,KAAlB;AAFH,WAAP;;AAIF,aAAK,SAAL;AACE,iBAAO,EACL,GAAGL,KADE;AAELO,YAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,CAAaC,MAAb,CACLC,aAAD,IAAmBA,aAAa,KAAKJ,KAD/B;AAFH,WAAP;;AAOF;AACE,iBAAOL,KAAP;AAfJ;;AAkBF;AACE,aAAOA,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["import { FILTER_STATUS_CHANGE, FILTER_COLOR_CHANGE } from \"./actionTypes\";\nimport { initialState } from \"./initialState\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_STATUS_CHANGE:\n      return {\n        ...state,\n        status: action.payload.status,\n      };\n\n    case FILTER_COLOR_CHANGE:\n      const { color, changeType } = action.payload;\n\n      switch (changeType) {\n        case \"added\":\n          return {\n            ...state,\n            colors: [...state.colors, color],\n          };\n        case \"removed\":\n          return {\n            ...state,\n            colors: state.colors.filter(\n              (existingColor) => existingColor !== color\n            ),\n          };\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}